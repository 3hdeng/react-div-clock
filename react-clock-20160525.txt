https://github.com/apeman-react-labo/apeman-react-clock


https://github.com/ryanburgess/react-clock

https://github.com/pughpugh/react-countdown-clock

http://stackoverflow.com/questions/32880484/react-js-live-clock-update

react's render method is supposed to render data in real time.
Do I need ajax for this? Can anyone offer some advice?


take a look at state/props and React general lifecycle methods to get a better idea of program flow

The setInterval should be put in componentDidMount so its not called 

every time your component renders and creates a lot of timers.


 the data binding is what i was missing!

//===
https://jsfiddle.net/rpg6t4uc/

var CityRow = React.createClass({
  setTime: function(){

    var currentdate = new Date();
    var hours = currentdate.getUTCHours() + parseInt

(this.props.UTCOffset);    

      // correct for number over 24, and negatives
      if( hours >= 24 ){ hours -= 24; }
      if( hours < 0   ){ hours += 12; }

      // add leading zero, first convert hours to string
      hours = hours + "";
      if( hours.length == 1 ){ hours = "0" + hours; }

      // minutes are the same on every time zone
      var minutes = currentdate.getUTCMinutes();

      // add leading zero, first convert hours to string
      minutes = minutes + "";
      if( minutes.length == 1 ){ minutes = "0" + minutes; }

      seconds = currentdate.getUTCSeconds();
      console.log(hours, minutes, seconds)
      this.setState({
        hours: hours,
        minutes: minutes,
        seconds: seconds
      });
  },
  componentWillMount: function(){
    this.setTime();
  },
  componentDidMount: function(){
     window.setInterval(function () {
      this.setTime();
    }.bind(this), 1000);
  },
  render: function() {

    return(
      <div className="city-row" ref="cityRow">
        <span className="city-time">{this.state.hours}:

{this.state.minutes}:{this.state.seconds}</span>
      </div>
    )
  }
});